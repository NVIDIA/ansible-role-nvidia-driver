---
- name: Unload nouveau
  community.general.modprobe:
    name: nouveau
    state: absent
  ignore_errors: true
  become: true

- name: Blacklist the nouveau driver module
  community.general.kernel_blacklist:
    name: nouveau
    state: present
  become: true

- name: Ubuntu install tasks (canonical repos)
  ansible.builtin.include_tasks: install-ubuntu.yml
  when: ansible_distribution == 'Ubuntu' and (not nvidia_driver_ubuntu_install_from_cuda_repo)

- name: Ubuntu install tasks (CUDA repo)
  ansible.builtin.include_tasks: install-ubuntu-cuda-repo.yml
  when: ansible_distribution == 'Ubuntu' and nvidia_driver_ubuntu_install_from_cuda_repo

- name: RedHat family install tasks
  ansible.builtin.include_tasks: install-redhat.yml
  when: ansible_os_family == 'RedHat'

- name: Create persistenced override dir
  ansible.builtin.file:
    path: /etc/systemd/system/nvidia-persistenced.service.d/
    state: directory
    recurse: true

- name: Configure persistenced service to turn on persistence mode
  ansible.builtin.copy:
    src: nvidia-persistenced-override.conf
    dest: /etc/systemd/system/nvidia-persistenced.service.d/override.conf
    mode: "0644"
  when: nvidia_driver_persistence_mode_on

- name: Remove persistenced service override
  ansible.builtin.file:
    path: /etc/systemd/system/nvidia-persistenced.service.d/override.conf
    state: absent
  when: not nvidia_driver_persistence_mode_on

- name: Enable persistenced
  ansible.builtin.systemd:
    name: nvidia-persistenced
    enabled: true
  when: nvidia_driver_package_state != 'absent'

- name: Set module parameters
  ansible.builtin.template:
    src: nvidia.conf.j2
    dest: "{{ nvidia_driver_module_file }}"
    mode: '0644'

- name: Reboot after driver install
  ansible.builtin.reboot:
  become: true
  when: install_driver.changed and not nvidia_driver_skip_reboot
